(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    150403,       2780]
NotebookOptionsPosition[    149563,       2757]
NotebookOutlinePosition[    150011,       2774]
CellTagsIndexPosition[    149968,       2771]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Video - igre skozi \[CHacek]as", "Title"],
 "\n",
 StyleBox["Analiza videoiger glede na razli\[CHacek]ne lastnosti.", "Subtitle"]
}], "Text",
 CellChangeTimes->{{3.839585262825449*^9, 3.8395852721926956`*^9}, 
   3.8395986470106363`*^9, {3.8395988027293715`*^9, 
   3.8395988532546*^9}},ExpressionUUID->"28756514-f133-454d-b32d-\
8a6e24a48e69"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov", "Section",
 CellChangeTimes->{{3.839585681272729*^9, 3.8395857051291885`*^9}, {
  3.8395988614171133`*^9, 3.839598876401367*^9}, {3.839599202694966*^9, 
  3.8395992112167892`*^9}, {3.839599328233924*^9, 
  3.8395993295182123`*^9}},ExpressionUUID->"b211100a-a5bd-4e02-810a-\
21c3663aa47f"],

Cell[TextData[{
 "Podatke sem pridobil iz podatkovne baze ",
 StyleBox["Wolfram data repository",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.839599341283358*^9, 
  3.83959936141928*^9}},ExpressionUUID->"180af85d-64cd-4a75-9256-\
ef8d02e9d3f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki", "=", " ", 
  RowBox[{
  "ResourceData", "[", "\"\<Video Games Until April 2017\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.839599366105791*^9, 3.839599387664527*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"89d5019f-2861-415b-ade1-ada1c6d86f50"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          11087820636219243158283957442649972442391875135172207958728], 
         "AllowEmbedding" -> False, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Name"} -> 1, {All, "Collection"} -> 
            1, {All, "Franchise"} -> 1, {All, "Rating"} -> 
            1, {All, "Popularity"} -> 1, {All, "AggregatedRating"} -> 
            1, {All, "RatingCount"} -> 1, {All, "Developers"} -> 
            1, {All, "Publishers"} -> 1, {All, "Storyline"} -> 
            1, {All, "Summary"} -> 1, {All, "GameEngines"} -> 
            1, {All, "Category"} -> 1, {All, "PlayerPerspectives"} -> 
            1, {All, "GameModes"} -> 1, {All, "Keywords"} -> 
            1, {All, "Themes"} -> 1, {All, "Genres"} -> 
            1, {All, "FirstReleaseDate"} -> 1, {All, "Releases"} -> 
            Association[{All, "Releases", All, "Category"} -> 
              1, {All, "Releases", All, "Platform"} -> 
              1, {All, "Releases", All, "Date"} -> 
              1, {All, "Releases", All, "Region"} -> 1], {All, "Platforms"} -> 
            1, {All, "AlternativeNames"} -> 2, {All, "Screenshots"} -> 
            Association[{All, "Screenshots", All, "URL"} -> 
              1, {All, "Screenshots", All, "Width"} -> 
              1, {All, "Screenshots", All, "Height"} -> 1], {All, "Cover"} -> 
            Association[{All, "Cover", "URL"} -> 1, {All, "Cover", "Width"} -> 
              1, {All, "Cover", "Height"} -> 1], {All, "ESRB"} -> 
            Association[{All, "ESRB", "Rating"} -> 
              1, {All, "ESRB", "Synopsis"} -> 1], {All, "PEGI"} -> 
            Association[{All, "PEGI", "Rating"} -> 
              1, {All, "PEGI", "Synopsis"} -> 1], {All, "PlatformCategories"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Name" -> TypeSystem`PackageScope`AtomShape[560.], 
                "Collection" -> 
                TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
                "Franchise" -> TypeSystem`PackageScope`AtomShape[33.6], 
                "Rating" -> TypeSystem`PackageScope`AtomShape[60], 
                "Popularity" -> TypeSystem`PackageScope`AtomShape[60], 
                "AggregatedRating" -> TypeSystem`PackageScope`AtomShape[60], 
                "RatingCount" -> TypeSystem`PackageScope`AtomShape[34], 
                "Developers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Publishers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Storyline" -> TypeSystem`PackageScope`AtomShape[33.6], 
                "Summary" -> TypeSystem`PackageScope`AtomShape[560.], 
                "GameEngines" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Category" -> 
                TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                "PlayerPerspectives" -> 
                TypeSystem`PackageScope`UnknownShape[False], "GameModes" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Keywords" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Themes" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Genres" -> 
                TypeSystem`PackageScope`UnknownShape[False], 
                "FirstReleaseDate" -> TypeSystem`PackageScope`AtomShape[75], 
                "Releases" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Category" -> TypeSystem`PackageScope`UnknownShape[False],
                     "Platform" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Date" -> 
                    TypeSystem`PackageScope`AtomShape[75], "Region" -> 
                    TypeSystem`PackageScope`AtomShape[60]]], 
                    DirectedInfinity[1], 4, {All, "Releases", All}]], 4, 
                  DirectedInfinity[1], {All, "Releases"}], "Platforms" -> 
                TypeSystem`PackageScope`UnknownShape[False], 
                "AlternativeNames" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[369.6]]], 2, 
                    DirectedInfinity[1], {All, "AlternativeNames", All}]], 2, 
                  DirectedInfinity[1], {All, "AlternativeNames"}], 
                "Screenshots" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "URL" -> TypeSystem`PackageScope`AtomShape[560.], "Width" -> 
                    TypeSystem`PackageScope`AtomShape[34], "Height" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], 
                    DirectedInfinity[1], 3, {All, "Screenshots", All}]], 3, 
                  DirectedInfinity[1], {All, "Screenshots"}], "Cover" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "URL" -> TypeSystem`PackageScope`AtomShape[560.], "Width" -> 
                    TypeSystem`PackageScope`AtomShape[34], "Height" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], 
                  DirectedInfinity[1], 3, {All, "Cover"}], "ESRB" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Rating" -> TypeSystem`PackageScope`AtomShape[33.6], 
                    "Synopsis" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                  DirectedInfinity[1], 2, {All, "ESRB"}], "PEGI" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Rating" -> TypeSystem`PackageScope`AtomShape[34], 
                    "Synopsis" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                  DirectedInfinity[1], 2, {All, "PEGI"}], 
                "PlatformCategories" -> 
                TypeSystem`PackageScope`UnknownShape[False]]], 
              DirectedInfinity[1], 10, {All}]], 5, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Name", "Collection", "Franchise", "Rating", "Popularity", 
             "AggregatedRating", "RatingCount", "Developers", "Publishers", 
             "Storyline", "Summary", "GameEngines", "Category", 
             "PlayerPerspectives", "GameModes", "Keywords", "Themes", 
             "Genres", "FirstReleaseDate", "Releases", "Platforms", 
             "AlternativeNames", "Screenshots", "Cover", "ESRB", "PEGI", 
             "PlatformCategories"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Atom[DateObject], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{"Category", "Platform", "Date", "Region"}, {
               TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`Atom[DateObject], 
                TypeSystem`Atom[Entity]}], TypeSystem`AnyLength], 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Atom[String], 2], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Struct[{"URL", "Width", "Height"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], TypeSystem`AnyLength], 
             TypeSystem`Struct[{"URL", "Width", "Height"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Rating", "Synopsis"}, {
               TypeSystem`Atom[String], TypeSystem`UnknownType}], 
             TypeSystem`Struct[{"Rating", "Synopsis"}, {
               TypeSystem`Atom[Integer], TypeSystem`UnknownType}], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength]}], 26623], 
         "Meta" -> Association["ID" -> 72254340355213], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Name"} -> 1, {All, "Collection"} -> 
            1, {All, "Franchise"} -> 1, {All, "Rating"} -> 
            1, {All, "Popularity"} -> 1, {All, "AggregatedRating"} -> 
            1, {All, "RatingCount"} -> 1, {All, "Developers"} -> 
            1, {All, "Publishers"} -> 1, {All, "Storyline"} -> 
            1, {All, "Summary"} -> 1, {All, "GameEngines"} -> 
            1, {All, "Category"} -> 1, {All, "PlayerPerspectives"} -> 
            1, {All, "GameModes"} -> 1, {All, "Keywords"} -> 
            1, {All, "Themes"} -> 1, {All, "Genres"} -> 
            1, {All, "FirstReleaseDate"} -> 1, {All, "Releases"} -> 
            Association[{All, "Releases", All, "Category"} -> 
              1, {All, "Releases", All, "Platform"} -> 
              1, {All, "Releases", All, "Date"} -> 
              1, {All, "Releases", All, "Region"} -> 1], {All, "Platforms"} -> 
            1, {All, "AlternativeNames"} -> 2, {All, "Screenshots"} -> 
            Association[{All, "Screenshots", All, "URL"} -> 
              1, {All, "Screenshots", All, "Width"} -> 
              1, {All, "Screenshots", All, "Height"} -> 1], {All, "Cover"} -> 
            Association[{All, "Cover", "URL"} -> 1, {All, "Cover", "Width"} -> 
              1, {All, "Cover", "Height"} -> 1], {All, "ESRB"} -> 
            Association[{All, "ESRB", "Rating"} -> 
              1, {All, "ESRB", "Synopsis"} -> 1], {All, "PEGI"} -> 
            Association[{All, "PEGI", "Rating"} -> 
              1, {All, "PEGI", "Synopsis"} -> 1], {All, "PlatformCategories"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Name" -> TypeSystem`PackageScope`AtomShape[560.], 
                "Collection" -> 
                TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
                "Franchise" -> TypeSystem`PackageScope`AtomShape[33.6], 
                "Rating" -> TypeSystem`PackageScope`AtomShape[60], 
                "Popularity" -> TypeSystem`PackageScope`AtomShape[60], 
                "AggregatedRating" -> TypeSystem`PackageScope`AtomShape[60], 
                "RatingCount" -> TypeSystem`PackageScope`AtomShape[34], 
                "Developers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Publishers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Storyline" -> TypeSystem`PackageScope`AtomShape[33.6], 
                "Summary" -> TypeSystem`PackageScope`AtomShape[560.], 
                "GameEngines" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Category" -> 
                TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                "PlayerPerspectives" -> 
                TypeSystem`PackageScope`UnknownShape[False], "GameModes" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Keywords" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Themes" -> 
                TypeSystem`PackageScope`UnknownShape[False], "Genres" -> 
                TypeSystem`PackageScope`UnknownShape[False], 
                "FirstReleaseDate" -> TypeSystem`PackageScope`AtomShape[75], 
                "Releases" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Category" -> TypeSystem`PackageScope`UnknownShape[False],
                     "Platform" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Date" -> 
                    TypeSystem`PackageScope`AtomShape[75], "Region" -> 
                    TypeSystem`PackageScope`AtomShape[60]]], 
                    DirectedInfinity[1], 4, {All, "Releases", All}]], 4, 
                  DirectedInfinity[1], {All, "Releases"}], "Platforms" -> 
                TypeSystem`PackageScope`UnknownShape[False], 
                "AlternativeNames" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[369.6]]], 2, 
                    DirectedInfinity[1], {All, "AlternativeNames", All}]], 2, 
                  DirectedInfinity[1], {All, "AlternativeNames"}], 
                "Screenshots" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "URL" -> TypeSystem`PackageScope`AtomShape[560.], "Width" -> 
                    TypeSystem`PackageScope`AtomShape[34], "Height" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], 
                    DirectedInfinity[1], 3, {All, "Screenshots", All}]], 3, 
                  DirectedInfinity[1], {All, "Screenshots"}], "Cover" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "URL" -> TypeSystem`PackageScope`AtomShape[560.], "Width" -> 
                    TypeSystem`PackageScope`AtomShape[34], "Height" -> 
                    TypeSystem`PackageScope`AtomShape[34]]], 
                  DirectedInfinity[1], 3, {All, "Cover"}], "ESRB" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Rating" -> TypeSystem`PackageScope`AtomShape[33.6], 
                    "Synopsis" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                  DirectedInfinity[1], 2, {All, "ESRB"}], "PEGI" -> 
                TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Rating" -> TypeSystem`PackageScope`AtomShape[34], 
                    "Synopsis" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                  DirectedInfinity[1], 2, {All, "PEGI"}], 
                "PlatformCategories" -> 
                TypeSystem`PackageScope`UnknownShape[False]]], 
              DirectedInfinity[1], 10, {All}]], 5, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Name", "Collection", "Franchise", "Rating", "Popularity", 
             "AggregatedRating", "RatingCount", "Developers", "Publishers", 
             "Storyline", "Summary", "GameEngines", "Category", 
             "PlayerPerspectives", "GameModes", "Keywords", "Themes", 
             "Genres", "FirstReleaseDate", "Releases", "Platforms", 
             "AlternativeNames", "Screenshots", "Cover", "ESRB", "PEGI", 
             "PlatformCategories"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Atom[DateObject], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{"Category", "Platform", "Date", "Region"}, {
               TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`Atom[DateObject], 
                TypeSystem`Atom[Entity]}], TypeSystem`AnyLength], 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Atom[String], 2], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Struct[{"URL", "Width", "Height"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer]}], TypeSystem`AnyLength], 
             TypeSystem`Struct[{"URL", "Width", "Height"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Rating", "Synopsis"}, {
               TypeSystem`Atom[String], TypeSystem`UnknownType}], 
             TypeSystem`Struct[{"Rating", "Synopsis"}, {
               TypeSystem`Atom[Integer], TypeSystem`UnknownType}], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength]}], 26623], 
         "Path" -> {}, "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 10,
          "DataRowCount" -> 26623, "DataColumnCount" -> 27, "SortPaths" -> {},
          "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 9, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Publishers", 
                    Style[
                    "Publishers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{
                    All, "Publishers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{
                    All, "Publishers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Storyline", 
                    Style[
                    "Storyline", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{
                    All, "Storyline"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{All, "Storyline"},
                     "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Summary", 
                    Style[
                    "Summary", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{All, "Summary"},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{All, "Summary"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["GameEngines", 
                    Style[
                    "GameEngines", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{
                    All, "GameEngines"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{
                    All, "GameEngines"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Category", 
                    Style[
                    "Category", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{
                    All, "Category"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{All, "Category"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PlayerPerspectives", 
                    Style[
                    "PlayerPerspectives", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{
                    All, "PlayerPerspectives"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{
                    All, "PlayerPerspectives"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["GameModes", 
                    Style[
                    "GameModes", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{
                    All, "GameModes"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{All, "GameModes"},
                     "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Keywords", 
                    Style[
                    "Keywords", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{
                    All, "Keywords"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{All, "Keywords"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Themes", 
                    Style[
                    "Themes", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{All, "Themes"}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{All, "Themes"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Genres", 
                    Style[
                    "Genres", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{All, "Genres"}, 
                    1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{All, "Genres"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["Publishers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "There are many subtle differences between the numerous \
versions of the game. The plot provided in this section is based on the PC \
game versions for Windows 95 and 98.\n\nThe protagonist, Li Xiaoyao(\:674e\
\:900d\:9065), is an ordinary 19-year-old boy who lives in a small fishing \
village near Suzhou(\:82cf\:5dde), China. During a quest to seek a cure for \
his ill aunt, he travels to a strange island out at sea, where he meets a \
fairy named Zhao Ling'er(\:8d75\:7075\:513f). He is forced to marry her and \
remain on the island forever, but manages to escape home with the cure for \
his aunt. However, he loses memory of his adventure on the island and does \
not remember Zhao when he meets her again. This time, Zhao's home has been \
destroyed by some enemies and Li decides to accompany her to southwestern \
China to find her mother, who may still be alive. \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["Storyline"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "The Legend of Sword and Fairy (Chinese: \:4ed9\:528d\:5947\
\:4fe0\:50b3 or \:4ed9\:5251\:5947\:4fa0\:4f20; pinyin: \
Xi\[ABar]nji\[AGrave]nQ\[IAcute]Xi\[AAcute]Zhu\[AGrave]n), also known as \
Chinese Paladin, is a game/media franchise created by Yao Zhuangxian (\:59da\
\:58ef\:61b2), and is developed by Taiwanese company Softstar.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["Summary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["GameEngines"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Main game", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["Category"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["PlayerPerspectives"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Single player"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Single player"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{1, 
                    Key["GameModes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["GameModes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["Keywords"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Fantasy"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Fantasy"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{1, 
                    Key["Themes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["Themes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Role-playing (RPG)"}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{"Role-playing (RPG)"}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{1, 
                    Key["Genres"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{1, 
                    Key["Genres"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Electronic Arts"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Electronic Arts"}, ShowStringCharacters -> False],
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{2, 
                    Key["Publishers"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["Publishers"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["Storyline"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "007: Agent Under Fire is the first James Bond game to \
appear on the PlayStation 2, GameCube, and Xbox. The game casts the player as \
the legendary James Bond who must accomplish missions throughout different \
areas of the world. Bond is sent on a mission rescue Zoe Nightshade, a CIA \
agent in the hands of Nigel Bloch. Nigel Bloch is the CEO of Identicon, a \
section of a highly successful industry company known as Malprave industries. \
Bond is also tasked to retrieve the set of DNA samples that are in \
Identicon's hands. So James Bond sets off on another adventure...\n\nThe game \
combines three game modes into one package: first-person-shooter, which is \
what most of the missions are, a rail-shooter, where the player only controls \
firing, and a driving game, where the player drives one of the many Bond \
cars. Numerous weapons have been added to the series, along with some \
fictional weapons like the Photon cannon and the 5-way grenade launcher. The \
player can utilize a wide array of gadgets and weapons, like the Q-Claw, \
Q-Decoder, and Bond's trusty Walther handgun. There is a large variety of \
missions, and Bond can go through most missions with weapons, or take a \
stealthy approach. The player is also rated in each level, based on score and \
difficulty level, and can unlock new features for both single and \
multiplayer.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["Summary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["GameEngines"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Main game", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["Category"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"First person"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"First person"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{2, 
                    Key["PlayerPerspectives"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["PlayerPerspectives"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Single player", "Split screen"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Single player", "Split screen"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{2, 
                    Key["GameModes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["GameModes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"james bond"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"james bond"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{2, 
                    Key["Keywords"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["Keywords"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{2, 
                    Key["Themes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["Themes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{2, 
                    Key["Genres"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{2, 
                    Key["Genres"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Electronic Arts"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Electronic Arts"}, ShowStringCharacters -> False],
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{3, 
                    Key["Publishers"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["Publishers"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["Storyline"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "From Russia with Love is a video game featuring Ian \
Fleming's secret agent, James Bond. The game is based on the 1957 novel and \
the 1963 film of the same name, albeit adding in new scenes to make the game \
more action-oriented, as well as changing the affiliation of the main \
villains. Additionally, it features many elements of earlier Bond films to \
recreate the feel of the era such as the jet pack from Thunderball (1965) and \
the Aston Martin DB5 that debuted in Goldfinger (1964).\n\nFrom Russia with \
Love is also notable in that it is the first video game to use Sean Connery's \
likeness as James Bond and the first to include all new voice work by the \
actor. From Russia with Love is the last James Bond video game EA Games \
marketed before they lost the rights to Activision in 2006.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["Summary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Havok Physics"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Havok Physics"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{3, 
                    Key["GameEngines"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["GameEngines"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["Main game", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["Category"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Third person"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Third person"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{3, 
                    Key["PlayerPerspectives"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["PlayerPerspectives"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Single player", "Split screen"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Single player", "Split screen"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{3, 
                    Key["GameModes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["GameModes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"spy"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"spy"}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{3, 
                    Key["Keywords"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["Keywords"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{3, 
                    Key["Themes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["Themes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{3, 
                    Key["Genres"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{3, 
                    Key["Genres"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Activision"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Activision"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{4, 
                    Key["Publishers"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["Publishers"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["Storyline"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "007 Legends features an original, overarching storyline \
tying together six classic Bond movies for an original James Bond experience, \
and equips players with state-of-the-art spy gadgets, an arsenal of weapons \
and more. \n \nIn addition to 007 Legends' main story, the game features the \
return of fan-favorite single-player Mi6 Ops Missions, which debuted in \
GoldenEye 007: Reloaded and challenges players to complete extra missions \
ranging from all-out action to stealth and gadget-based gameplay and compete \
for the highest online leader board scores. Also for the first time ever, \
players will be able to participate as one of Bond's cohorts or villainous \
foes, reliving the missions through their eyes, as well as 007's. Meanwhile \
the robust James Bond multiplayer experience includes local four-player \
split-screen game modes and online competitive gameplay with new maps, \
weapons and characters derived from Bond's 50 year legacy. With more gadgets, \
deeper stealth and spy investigation gameplay, gamers will have every \
opportunity to truly feel like the world's favorite spy.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["Summary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["GameEngines"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Main game", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["Category"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"First person"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"First person"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{4, 
                    Key["PlayerPerspectives"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["PlayerPerspectives"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Single player", "Multiplayer", "Split screen"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Single player", "Multiplayer", "Split screen"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{4, 
                    Key["GameModes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["GameModes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"james bond"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"james bond"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{4, 
                    Key["Keywords"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["Keywords"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{4, 
                    Key["Themes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["Themes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{4, 
                    Key["Genres"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{4, 
                    Key["Genres"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Activision", "Square Enix"}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{"Activision", "Square Enix"}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{5, 
                    Key["Publishers"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["Publishers"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                  "Bond meets Vesper Lynd, an accountant from the Treasury, \
on his way to Montenegro. After their meeting, Bond fights off dealers from a \
drug organization spread throughout the train and kills the boss who was \
invited to the Casino Royale game of Le Chiffre and replaces him in the game \
(a notable difference from the film). After combat, Bond arrives in \
Montenegro, where he comes face to face with Le Chiffre. After defeating Le \
Chiffre in the poker game, Vesper is kidnapped. Bond pursues the kidnappers \
but crashes his car and is taken hostage. He escapes and battles through Le \
Chiffre's barge to rescue Vesper. While he is successful, Bond and Vesper are \
re-captured by Le Chiffre's body guards. Near death, they are saved when Mr. \
White kills Le Chiffre for his recent actions, leaving Bond and Vesper \
alive.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["Storyline"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Introducing a more lethal and cunningly efficient Bond, \
the game blends intense first-person action with a unique third-person cover \
combat system that allows players to truly feel what it is like to be the \
ultimate secret agent as they use their stealth, precision shooting and \
lethal combat skills to progress through missions. Blending the action of the \
\"Quantum of Solace\" feature film with the \"Casino Royale\" movie, the \
title propels players into the cinematic experience of international \
espionage.  \n \nBased on the Call of Duty 4: Modern Warfare game engine that \
has been specifically engineered to immerse players in the Bond universe, the \
Quantum of Solace game delivers high-definition graphics, reactive AI and \
visually stunning locations inspired by locales portrayed in the films. \
Quantum of Solace marks the first time players can become the dangerous and \
cunning Bond as portrayed by Daniel Craig. From silent take downs and \
sneaking through confined spaces, to one-on-one shoot outs and large scale \
battles, players experience a variety of gameplay that challenges them to \
think through situations and choose how they progress, whether it's through \
covert means or confronting enemies in full force.   \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["Summary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"IW Engine"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"IW Engine"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{5, 
                    Key["GameEngines"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["GameEngines"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["Main game", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["Category"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"First person", "Third person"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"First person", "Third person"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{5, 
                    Key["PlayerPerspectives"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["PlayerPerspectives"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"Single player", "Multiplayer", "Split screen"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"Single player", "Multiplayer", "Split screen"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{5, 
                    Key["GameModes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["GameModes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"james bond"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"james bond"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{5, 
                    Key["Keywords"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["Keywords"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Action"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{5, 
                    Key["Themes"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["Themes"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Shooter"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][{5, 
                    Key["Genres"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "927b8b72-968e-47c3-bcb1-57165b113b00"][{5, 
                    Key["Genres"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[True, 26623, 1], {1, 26623 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[False, 26623, 1], {1, 26623 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[26623, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[26623, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[False, 26623, 1], {1, 26623 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[True, 26623, 1], {1, 26623 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 27, 1], {1, 27 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 27, 1], {1, 27 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 9, "\[Dash]", 18, " of ", 
                    Style[27, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 9, "\[Dash]", 18, " of ", 
                    Style[27, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Columns", 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Columns", 
                    2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Columns", 
                    5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Columns", 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"}, "Columns", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 27, 1], {1, 27 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 27, 1], {1, 27 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[
                   TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    "927b8b72-968e-47c3-bcb1-57165b113b00", {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "927b8b72-968e-47c3-bcb1-57165b113b00"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "927b8b72-968e-47c3-bcb1-57165b113b00"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  "927b8b72-968e-47c3-bcb1-57165b113b00"][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {1883., {220.13403328722342`, 225.86596671277658`}},
         TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {1883., {220.13403328722342`, 225.86596671277658`}}],
       BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 11087820636219243158283957442649972442391875135172207958728,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839585735420245*^9, 3.83959979116333*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"fb32d338-422c-41f0-8693-55b56076d633"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536., 801.5999999999999},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d8636bb4-98a3-416c-a55e-d6b91b774691"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 371, 8, 107, "Text",ExpressionUUID->"28756514-f133-454d-b32d-8a6e24a48e69"],
Cell[CellGroupData[{
Cell[954, 32, 318, 5, 67, "Section",ExpressionUUID->"b211100a-a5bd-4e02-810a-21c3663aa47f"],
Cell[1275, 39, 262, 8, 35, "Text",ExpressionUUID->"180af85d-64cd-4a75-9256-ef8d02e9d3f4"],
Cell[CellGroupData[{
Cell[1562, 51, 285, 6, 28, "Input",ExpressionUUID->"89d5019f-2861-415b-ade1-ada1c6d86f50"],
Cell[1850, 59, 147685, 2694, 488, "Output",ExpressionUUID->"fb32d338-422c-41f0-8693-55b56076d633"]
}, Open  ]]
}, Open  ]]
}
]
*)

